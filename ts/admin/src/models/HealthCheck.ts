/* tslint:disable */
/* eslint-disable */
/**
 * Numeno Article Recommender API
 * ### Admin API  These are the admin APIs, not meant to be used by anyone but Numeno administration tools or the backend of the Numeno dashboard.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@numeno.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
/**
 * Information about the health of a service
 * @export
 * @interface HealthCheck
 */
export interface HealthCheck {
  /**
   * The status of the API
   * @type {string}
   * @memberof HealthCheck
   */
  status: string
  /**
   * The name of the service
   * @type {string}
   * @memberof HealthCheck
   */
  service?: string
  /**
   * The version of the API
   * @type {string}
   * @memberof HealthCheck
   */
  version?: string
  /**
   * The cluster the API is running on
   * @type {string}
   * @memberof HealthCheck
   */
  cluster?: string
  /**
   * Whether debug mode is enabled or not
   * @type {boolean}
   * @memberof HealthCheck
   */
  debugMode?: boolean
}

/**
 * Check if a given object implements the HealthCheck interface.
 */
export function instanceOfHealthCheck(value: object): value is HealthCheck {
  if (!('status' in value) || value['status'] === undefined) return false
  return true
}

export function HealthCheckFromJSON(json: any): HealthCheck {
  return HealthCheckFromJSONTyped(json, false)
}

export function HealthCheckFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): HealthCheck {
  if (json == null) {
    return json
  }
  return {
    status: json['status'],
    service: json['service'] == null ? undefined : json['service'],
    version: json['version'] == null ? undefined : json['version'],
    cluster: json['cluster'] == null ? undefined : json['cluster'],
    debugMode: json['debugMode'] == null ? undefined : json['debugMode'],
  }
}

export function HealthCheckToJSON(json: any): HealthCheck {
  return HealthCheckToJSONTyped(json, false)
}

export function HealthCheckToJSONTyped(
  value?: HealthCheck | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    status: value['status'],
    service: value['service'],
    version: value['version'],
    cluster: value['cluster'],
    debugMode: value['debugMode'],
  }
}
