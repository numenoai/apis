/* tslint:disable */
/* eslint-disable */
/**
 * Numeno Article Recommender API
 * ### Introduction  Use the Numeno Article Recommender API to get personalized article recommendations in three easy steps:  1. Define a Persona: Simply provide a description of your interests, vibe, and target audience.  2. Associate the Persona with a Feed.  3. Pull from the Feed to receive a curated selection of articles from across the web.  ### Cross-Origin Resource Sharing This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/), allowing cross-domain communication from the browser. All responses have a wildcard same-origin policy which makes them accessible from any code on any site.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@numeno.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
/**
 *
 * @export
 * @interface UpdatePersona
 */
export interface UpdatePersona {
  /**
   * The natural-language body of the Persona
   * @type {string}
   * @memberof UpdatePersona
   */
  body: string
}

/**
 * Check if a given object implements the UpdatePersona interface.
 */
export function instanceOfUpdatePersona(value: object): value is UpdatePersona {
  if (!('body' in value) || value['body'] === undefined) return false
  return true
}

export function UpdatePersonaFromJSON(json: any): UpdatePersona {
  return UpdatePersonaFromJSONTyped(json, false)
}

export function UpdatePersonaFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UpdatePersona {
  if (json == null) {
    return json
  }
  return {
    body: json['body'],
  }
}

export function UpdatePersonaToJSON(json: any): UpdatePersona {
  return UpdatePersonaToJSONTyped(json, false)
}

export function UpdatePersonaToJSONTyped(
  value?: UpdatePersona | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    body: value['body'],
  }
}
