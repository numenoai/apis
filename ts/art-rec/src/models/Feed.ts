/* tslint:disable */
/* eslint-disable */
/**
 * Numeno Article Recommender API
 * ### Introduction  Use the Numeno Article Recommender API to get personalized article recommendations in three easy steps:  1. Define a Persona: Simply provide a description of your interests, vibe, and target audience.  2. Associate the Persona with a Feed.  3. Pull from the Feed to receive a curated selection of articles from across the web.  ### Cross-Origin Resource Sharing This API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/), allowing cross-domain communication from the browser. All responses have a wildcard same-origin policy which makes them accessible from any code on any site.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@numeno.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
/**
 * A feed.
 *
 * @export
 * @interface Feed
 */
export interface Feed {
  /**
   * The unique ID of the Feed
   * @type {string}
   * @memberof Feed
   */
  id: string
  /**
   * The name of the feed for easy reference
   * @type {string}
   * @memberof Feed
   */
  name: string
  /**
   * The date the key was created in ISO 8601 datetime
   * @type {Date}
   * @memberof Feed
   */
  createdAt?: Date
  /**
   * The date the key was last modified in ISO 8601 datetime
   * @type {Date}
   * @memberof Feed
   */
  modifiedAt?: Date
}

/**
 * Check if a given object implements the Feed interface.
 */
export function instanceOfFeed(value: object): value is Feed {
  if (!('id' in value) || value['id'] === undefined) return false
  if (!('name' in value) || value['name'] === undefined) return false
  return true
}

export function FeedFromJSON(json: any): Feed {
  return FeedFromJSONTyped(json, false)
}

export function FeedFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Feed {
  if (json == null) {
    return json
  }
  return {
    id: json['id'],
    name: json['name'],
    createdAt:
      json['createdAt'] == null ? undefined : new Date(json['createdAt']),
    modifiedAt:
      json['modifiedAt'] == null ? undefined : new Date(json['modifiedAt']),
  }
}

export function FeedToJSON(json: any): Feed {
  return FeedToJSONTyped(json, false)
}

export function FeedToJSONTyped(
  value?: Feed | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    id: value['id'],
    name: value['name'],
    createdAt:
      value['createdAt'] == null ? undefined : value['createdAt'].toISOString(),
    modifiedAt:
      value['modifiedAt'] == null
        ? undefined
        : value['modifiedAt'].toISOString(),
  }
}
