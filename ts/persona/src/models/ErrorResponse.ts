/* tslint:disable */
/* eslint-disable */
/**
 * Numeno Persona API
 * ### Introduction  Use the Numeno Persona API to create new personas.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@numeno.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime'
import type { ErrorDetail } from './ErrorDetail'
import {
  ErrorDetailFromJSON,
  ErrorDetailFromJSONTyped,
  ErrorDetailToJSON,
  ErrorDetailToJSONTyped,
} from './ErrorDetail'

/**
 *
 * @export
 * @interface ErrorResponse
 */
export interface ErrorResponse {
  /**
   * HTTP status code of the error
   * @type {number}
   * @memberof ErrorResponse
   */
  status: number
  /**
   * A message describing the error
   * @type {string}
   * @memberof ErrorResponse
   */
  message: string
  /**
   * Details about specific errors (if any)
   * @type {Array<ErrorDetail>}
   * @memberof ErrorResponse
   */
  errors?: Array<ErrorDetail>
}

/**
 * Check if a given object implements the ErrorResponse interface.
 */
export function instanceOfErrorResponse(value: object): value is ErrorResponse {
  if (!('status' in value) || value['status'] === undefined) return false
  if (!('message' in value) || value['message'] === undefined) return false
  return true
}

export function ErrorResponseFromJSON(json: any): ErrorResponse {
  return ErrorResponseFromJSONTyped(json, false)
}

export function ErrorResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ErrorResponse {
  if (json == null) {
    return json
  }
  return {
    status: json['status'],
    message: json['message'],
    errors:
      json['errors'] == null
        ? undefined
        : (json['errors'] as Array<any>).map(ErrorDetailFromJSON),
  }
}

export function ErrorResponseToJSON(json: any): ErrorResponse {
  return ErrorResponseToJSONTyped(json, false)
}

export function ErrorResponseToJSONTyped(
  value?: ErrorResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value
  }

  return {
    status: value['status'],
    message: value['message'],
    errors:
      value['errors'] == null
        ? undefined
        : (value['errors'] as Array<any>).map(ErrorDetailToJSON),
  }
}
